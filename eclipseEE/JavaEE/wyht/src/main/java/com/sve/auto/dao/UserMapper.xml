<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sve.auto.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.sve.auto.model.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_pass" property="userPass" jdbcType="VARCHAR" />
    <result column="user_salt" property="userSalt" jdbcType="VARCHAR" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="user_status" property="userStatus" jdbcType="INTEGER" />
    <result column="user_level" property="userLevel" jdbcType="INTEGER" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="last_at" property="lastAt" jdbcType="TIMESTAMP" />
  </resultMap>
   <resultMap id="BasePerm" type="com.sve.auto.model.Permission" >
    <id column="perm_id" property="permId" jdbcType="INTEGER" />
    <result column="perm_name" property="permName" jdbcType="VARCHAR" />
    <result column="perm_description" property="permDescription" jdbcType="VARCHAR" />
    <result column="perm_url" property="permUrl" jdbcType="VARCHAR" />
     <result column="perm_order" property="permOrder" jdbcType="VARCHAR"/>
    <result column="perm_isshow" property="permIsshow" jdbcType="INTEGER" />
    <result column="perm_code" property="permCode" jdbcType="VARCHAR" />
    <result column="perm_menu_id" property="permMenuId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap type="com.sve.auto.model.User" id="BaseUserPerm" extends="BaseResultMap">
      <collection property="permlist" resultMap="BasePerm"/>
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, user_name, user_pass, user_salt,user_email,user_phone, user_status,user_level, create_at, last_at
  </sql>
  <select id="selectUserLevelAll" resultMap="BaseResultMap" >
      select <include refid="Base_Column_List"/> from user where user_level=0
  </select>
  <select id="selectUserPermName" resultMap="BaseUserPerm" parameterType="java.lang.String">
      select u.*,p.* from user u inner join user_perm up on u.user_id=up.up_user_id 
      inner join permission p on p.perm_id=up.up_perm_id where (u.user_name=#{userName} or 
      u.user_email=#{userName} or u.user_phone=#{userName})
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="isUserphone" resultType="java.lang.Integer" parameterType="com.sve.auto.model.User">
      select count(*) from user where user_name=#{userName} and user_phone=#{userPhone}
  </select>
  <select id="findUsername" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select <include refid="Base_Column_List" />
    from user
    where (user_name = #{userName,jdbcType=VARCHAR} or user_email=#{userName,jdbcType=VARCHAR}
     OR user_phone=#{userName,jdbcType=VARCHAR})
  </select>
  <select id="findisUser" resultMap="BaseResultMap" parameterType="com.sve.auto.model.User" >
    select  <include refid="Base_Column_List" />
    from user where (user_name = #{userName,jdbcType=VARCHAR} or user_email=#{userName,jdbcType=VARCHAR}
     OR user_phone=#{userName,jdbcType=VARCHAR}) and 
    user_pass=#{userPass,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="com.sve.auto.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userPass != null" >
        user_pass,
      </if>
      <if test="userSalt != null" >
        user_salt,
      </if>
      <if test="userEmail != null" >
        user_email,
      </if>
      <if test="userPhone != null" >
        user_phone,
      </if>
      <if test="userStatus != null" >
        user_status,
      </if>
      <if test="userLevel != null" >
        user_level,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="lastAt != null" >
        last_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPass != null" >
        #{userPass,jdbcType=VARCHAR},
      </if>
      <if test="userSalt != null" >
        #{userSalt,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null" >
        #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="userLevel != null" >
        #{userLevel,jdbcType=INTEGER},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="lastAt != null" >
        #{lastAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sve.auto.model.User" >
    update user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPass != null" >
        user_pass = #{userPass,jdbcType=VARCHAR},
      </if>
      <if test="userSalt != null" >
        user_salt = #{userSalt,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null" >
        user_status = #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="userLevel != null" >
        user_level = #{userLevel,jdbcType=INTEGER},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="lastAt != null" >
        last_at = #{lastAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>